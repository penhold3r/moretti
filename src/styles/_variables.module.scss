/***********************************
*
* COLORS
*
*/
$primary-color: #38424d;
$primary-grey: #888e94;

$secondary-color: #e7cfbe;
$secondary-grey: lighten(desaturate($secondary-color, 75%), 10%);

$grey: desaturate($primary-color, 80%);
$light: #e8d0bf;
$dark: darken(desaturate($primary-color, 85%), 25%);

$theme-colors: (
	'primary': $primary-color,
	'primary-grey': $primary-grey,
	'secondary': $secondary-color,
	'secondary-grey': $secondary-grey,
	'grey': $grey,
	'light': $light,
	'dark': $dark,
	'grey-100': lighten($grey, 40%),
	'grey-200': lighten($grey, 30%),
	'grey-300': lighten($grey, 20%),
	'grey-400': lighten($grey, 10%),
	'grey-500': $grey,
	'grey-600': darken($grey, 10%),
	'grey-700': darken($grey, 15%),
	'grey-800': darken($grey, 20%),
	'grey-900': darken($grey, 22%),
);

:export {
	primary: $primary-color;
	primaryGrey: $primary-grey;
	secondary: $secondary-color;
	secondaryGrey: $secondary-grey;
	grey: $grey;
	light: $light;
	dark: $dark;
	grey100: lighten($grey, 40%);
	grey200: lighten($grey, 30%);
	grey300: lighten($grey, 20%);
	grey400: lighten($grey, 10%);
	grey500: $grey;
	grey600: darken($grey, 10%);
	grey700: darken($grey, 20%);
	grey800: darken($grey, 25%);
	grey900: darken($grey, 30%);
}

/***********************************
*
* TYPOGRAPHY
*
*/

@import url('https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,400;0,700;1,400;1,700&display=swap');

$font-family-base: 'Noto Serif', Georgia, serif;

$enable-responsive-font-sizes: true;

/**********************************/

@import '~bootstrap/scss/bootstrap';

/***********************************
*
* SCROLLBAR COLOR
*
*/
@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white, 50%)) {
	// Webkit
	&::-webkit-scrollbar {
		width: $size;
		height: $size;
	}

	&::-webkit-scrollbar-thumb {
		background: $foreground-color;
	}

	&::-webkit-scrollbar-track {
		background: $background-color;
	}

	// Firefox
	scrollbar-color: $foreground-color $background-color;
}

/***********************************
*
* RESPONSIVE POSITION AND SIZES
*
*/

$positions: static, relative, absolute, fixed, sticky;

@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

		// position classes
		@each $value in $positions {
			.pos#{$infix}-#{$value} {
				position: $value !important;
			}
		}

		// size classes
		@each $prop, $abbrev in (width: w, height: h) {
			@each $size, $length in $sizes {
				.#{$abbrev}-#{$size} {
					#{$prop}: $length !important;
				}
				.#{$abbrev}#{$infix}-#{$size} {
					#{$prop}: $length !important;
				}
			}
		}
	}
}

.w-100 {
	width: 100%;
}

.h-100 {
	width: 100%;
}
